-- https://github.com/RRethy/base16-nvim/blob/master/lua/base16-colorscheme.lua

local c = {
	offBlack = "#2b303b",
	darkestGrey = "#343d46",
	darkGrey = "#4f5b66",
	midDarkGrey = "#65737e",
	midLightGrey = "#a7adba",
	lightGrey = "#c0c5ce",
	lightestGrey = "#dfe1e8",
	offwhite = "#eff1f5",
	orange = "#d08770",
	yellow = "#ebcb8b",
	oliveGreen = "#a3be8c",
	waterGreen = "#96b5b4",
	blueGrey = "#8fa1b3",
	pink = "#b48ead",
	brick = "#ab7967",
	red = "#bf616a",
}

local highlights = {
	Normal = { fg = c.lightGrey, bg = c.offBlack },
	Bold = { bold = true },
	Debug = { fg = c.midLightGrey },
	Directory = { fg = c.blueGrey },
	Error = { fg = c.red, bg = c.offBlack },
	ErrorMsg = { fg = c.midLightGrey, bg = c.offBlack },
	Exception = { fg = c.midLightGrey },
	FoldColumn = { fg = c.waterGreen, bg = c.offBlack },
	Folded = { fg = c.midDarkGrey, bg = c.darkestGrey },
	IncSearch = { fg = c.darkestGrey, bg = c.orange },
	Italic = {},
	Macro = { fg = c.midLightGrey },
	MatchParen = { bg = c.midDarkGrey },
	ModeMsg = { fg = c.oliveGreen },
	MoreMsg = { fg = c.oliveGreen },
	Question = { fg = c.blueGrey },
	Search = { fg = c.darkestGrey, bg = c.yellow },
	Substitute = { fg = c.darkestGrey, bg = c.yellow },
	SpecialKey = { fg = c.midDarkGrey },
	TooLong = { fg = c.midLightGrey },
	Underlined = { fg = c.midLightGrey },
	Visual = { bg = c.darkestGrey },
	VisualNOS = { fg = c.midLightGrey },
	WarningMsg = { fg = c.midLightGrey },
	WildMenu = { fg = c.midLightGrey, bg = c.yellow },
	Title = { fg = c.blueGrey },
	Conceal = { fg = c.blueGrey, bg = c.offBlack },
	Cursor = { fg = c.offBlack, bg = c.lightGrey },
	NonText = { fg = c.midDarkGrey },
	LineNr = { fg = c.darkGrey, bg = c.offBlack },
	SignColumn = { fg = c.midDarkGrey, bg = c.offBlack },
	StatusLine = { fg = c.midLightGrey, bg = c.offBlack },
	StatusLineNC = { fg = c.midLightGrey, bg = c.darkestGrey },
	WinBar = { fg = c.lightGrey },
	WinBarNC = { fg = c.midLightGrey },
	-- VertSplit = { fg = c.red, bg = c.offBlack },
	VertSplit = { fg = c.darkGrey, bg = c.offBlack },
	WinSeparator = { fg = c.darkGrey, bg = c.offBlack },
	ColorColumn = { bg = c.darkestGrey },
	CursorColumn = { bg = c.darkestGrey },
	CursorLine = { bg = c.darkestGrey },
	CursorLineNr = { fg = c.midLightGrey, bg = c.darkestGrey },
	QuickFixLine = { bg = c.darkestGrey },
	PMenu = { fg = c.lightGrey, bg = c.darkestGrey },
	PMenuSel = { fg = c.darkestGrey, bg = c.lightGrey },
	TabLine = { fg = c.midDarkGrey, bg = c.darkestGrey },
	TabLineFill = { fg = c.midDarkGrey, bg = c.darkestGrey },
	TabLineSel = { fg = c.oliveGreen, bg = c.darkestGrey },
	NvimInternalError = { fg = c.offBlack, bg = c.midLightGrey },
	NormalFloat = { fg = c.midDarkGrey, bg = c.offBlack },
	FloatBorder = { fg = c.blueGrey, bg = c.offBlack },
	NormalNC = { fg = c.lightGrey, bg = c.offBlack },
	TermCursor = { fg = c.offBlack, bg = c.lightGrey },

	TroubleText = { fg = c.midDarkGrey },
	TroubleLocation = { link = "TroubleText" },

	-- Standard syntax
	Boolean = { fg = c.orange },
	Character = { fg = c.midLightGrey },
	Comment = { fg = c.midDarkGrey },
	Conditional = { fg = c.pink },
	Constant = { fg = c.orange },
	Define = { fg = c.pink },
	Delimiter = { fg = c.brick },
	Float = { fg = c.orange },
	Function = { fg = c.blueGrey },
	Identifier = { fg = c.midLightGrey },
	Include = { fg = c.blueGrey },
	Keyword = { fg = c.pink },
	Label = { fg = c.yellow },
	Number = { fg = c.orange },
	Operator = { fg = c.pink },
	PreProc = { fg = c.yellow },
	Repeat = { fg = c.yellow },
	Special = { fg = c.waterGreen },
	SpecialChar = { fg = c.brick },
	Statement = { fg = c.midLightGrey },
	StorageClass = { fg = c.yellow },
	String = { fg = c.oliveGreen },
	Structure = { fg = c.pink },
	Tag = { fg = c.yellow },
	Todo = { fg = c.yellow, bg = c.darkestGrey },
	Type = { fg = c.yellow },
	Typedef = { fg = c.yellow },

	-- Diagnostics
	DiagnosticError = { fg = c.red },
	DiagnosticWarn = { fg = c.pink },
	DiagnosticInfo = { fg = c.blueGrey },
	DiagnosticHint = { fg = c.waterGreen },
	DiagnosticUnderlineError = { fg = c.red, undercurl = true, sp = c.red },
	DiagnosticUnderlineWarning = { undercurl = true, sp = c.orange },
	DiagnosticUnderlineWarn = { undercurl = true, sp = c.orange },
	DiagnosticUnderlineInformation = { undercurl = true, sp = c.pink },
	DiagnosticUnderlineHint = { undercurl = true, sp = c.waterGreen },

	-- LSP
	LspReferenceText = { underline = true, sp = c.midLightGrey },
	LspReferenceRead = { underline = true, sp = c.midLightGrey },
	LspReferenceWrite = { underline = true, sp = c.midLightGrey },
	LspDiagnosticsDefaultError = { link = "DiagnosticError" },
	LspDiagnosticsDefaultWarning = { link = "DiagnosticWarn" },
	LspDiagnosticsDefaultInformation = { link = "DiagnosticInfo" },
	LspDiagnosticsDefaultHint = { link = "DiagnosticHint" },
	LspDiagnosticsUnderlineError = { link = "DiagnosticUnderlineError" },
	LspDiagnosticsUnderlineWarning = { link = "DiagnosticUnderlineWarning" },
	LspDiagnosticsUnderlineInformation = { link = "DiagnosticUnderlineInformation" },
	LspDiagnosticsUnderlineHint = { link = "DiagnosticUnderlineHint" },
	LspInlayHint = { fg = c.midDarkGrey, italic = true },

	-- Treesitter
	TreesitterContext = { bg = c.darkestGrey, italic = true },
	TSAnnotation = { fg = c.brick },
	TSAttribute = { fg = c.yellow },
	TSBoolean = { fg = c.orange },
	TSCharacter = { fg = c.midLightGrey },
	TSComment = { fg = c.midDarkGrey, italic = true },
	TSConstructor = { fg = c.blueGrey },
	TSConditional = { fg = c.pink },
	TSConstant = { fg = c.orange },
	TSConstBuiltin = { fg = c.orange, italic = true },
	TSConstMacro = { fg = c.midLightGrey },
	TSError = { fg = c.midLightGrey },
	TSException = { fg = c.midLightGrey },
	TSField = { fg = c.lightGrey },
	TSFloat = { fg = c.orange },
	TSFunction = { fg = c.blueGrey },
	TSFuncBuiltin = { fg = c.blueGrey, italic = true },
	TSFuncMacro = { fg = c.midLightGrey },
	TSInclude = { fg = c.blueGrey },
	TSKeyword = { fg = c.pink },
	TSKeywordFunction = { fg = c.pink },
	TSKeywordOperator = { fg = c.pink },
	TSLabel = { fg = c.yellow },
	TSMethod = { fg = c.blueGrey },
	TSNamespace = { fg = c.midLightGrey },
	TSNone = { fg = c.lightGrey },
	TSNumber = { fg = c.orange },
	TSOperator = { fg = c.lightGrey },
	TSParameter = { fg = c.lightGrey },
	TSParameterReference = { fg = c.lightGrey },
	TSProperty = { fg = c.lightGrey },
	TSPunctDelimiter = { fg = c.brick },
	TSPunctBracket = { fg = c.lightGrey },
	TSPunctSpecial = { fg = c.brick },
	TSRepeat = { fg = c.pink },
	TSString = { fg = c.oliveGreen },
	TSStringRegex = { fg = c.waterGreen },
	TSStringEscape = { fg = c.waterGreen },
	TSSymbol = { fg = c.oliveGreen },
	TSTag = { fg = c.midLightGrey },
	TSTagDelimiter = { fg = c.brick },
	TSText = { fg = c.lightGrey },
	TSStrong = { bold = true },
	TSEmphasis = { fg = c.orange, italic = true },
	TSUnderline = { fg = c.offBlack, underline = true },
	TSStrike = { fg = c.offBlack, strikethrough = true },
	TSTitle = { fg = c.blueGrey },
	TSLiteral = { fg = c.orange },
	TSURI = { fg = c.orange, underline = true },
	TSType = { fg = c.yellow },
	TSTypeBuiltin = { fg = c.yellow, italic = true },
	TSVariable = { fg = c.midLightGrey },
	TSVariableBuiltin = { fg = c.midLightGrey, italic = true },
	TSDefinition = { underline = true, sp = c.midLightGrey },
	TSDefinitionUsage = { underline = true, sp = c.midLightGrey },
	TSCurrentScope = { bold = true },

	["@comment"] = { link = "TSComment" },
	["@error"] = { link = "TSError" },
	["@none"] = { link = "TSNone" },
	["@preproc"] = { link = "PreProc" },
	["@define"] = { link = "Define" },
	["@operator"] = { link = "TSOperator" },
	["@punctuation.delimiter"] = { link = "TSPunctDelimiter" },
	["@punctuation.bracket"] = { link = "TSPunctBracket" },
	["@punctuation.special"] = { link = "TSPunctSpecial" },
	["@string"] = { link = "TSString" },
	["@string.regex"] = { link = "TSStringRegex" },
	["@string.escape"] = { link = "TSStringEscape" },
	["@string.special"] = { link = "SpecialChar" },
	["@character"] = { link = "TSCharacter" },
	["@character.special"] = { link = "SpecialChar" },
	["@boolean"] = { link = "TSBoolean" },
	["@number"] = { link = "TSNumber" },
	["@float"] = { link = "TSFloat" },
	["@function"] = { link = "TSFunction" },
	["@function.call"] = { link = "TSFunction" },
	["@function.builtin"] = { link = "TSFuncBuiltin" },
	["@function.macro"] = { link = "TSFuncMacro" },
	["@method"] = { link = "TSMethod" },
	["@method.call"] = { link = "TSMethod" },
	["@constructor"] = { link = "TSConstructor" },
	["@parameter"] = { link = "TSParameter" },
	["@keyword"] = { link = "TSKeyword" },
	["@keyword.function"] = { link = "TSKeywordFunction" },
	["@keyword.operator"] = { link = "TSKeywordOperator" },
	["@keyword.return"] = { link = "TSKeyword" },
	["@conditional"] = { link = "TSConditional" },
	["@repeat"] = { link = "TSRepeat" },
	["@debug"] = { link = "Debug" },
	["@label"] = { link = "TSLabel" },
	["@include"] = { link = "TSInclude" },
	["@exception"] = { link = "TSException" },
	["@type"] = { link = "TSType" },
	["@type.builtin"] = { link = "TSTypeBuiltin" },
	["@type.qualifier"] = { link = "TSKeyword" },
	["@type.definition"] = { link = "TSType" },
	["@storageclass"] = { link = "StorageClass" },
	["@attribute"] = { link = "TSAttribute" },
	["@field"] = { link = "TSField" },
	["@property"] = { link = "TSProperty" },
	["@variable"] = { link = "TSVariable" },
	["@variable.builtin"] = { link = "TSVariableBuiltin" },
	["@constant"] = { link = "TSConstant" },
	["@constant.builtin"] = { link = "TSConstant" },
	["@constant.macro"] = { link = "TSConstant" },
	["@namespace"] = { link = "TSNamespace" },
	["@symbol"] = { link = "TSSymbol" },
	["@text"] = { link = "TSText" },
	["@text.diff.add"] = { link = "DiffAdd" },
	["@text.diff.delete"] = { link = "DiffDelete" },
	["@text.strong"] = { link = "TSStrong" },
	["@text.emphasis"] = { link = "TSEmphasis" },
	["@text.underline"] = { link = "TSUnderline" },
	["@text.strike"] = { link = "TSStrike" },
	["@text.title"] = { link = "TSTitle" },
	["@text.literal"] = { link = "TSLiteral" },
	["@text.uri"] = { link = "TSUri" },
	["@text.math"] = { link = "Number" },
	["@text.environment"] = { link = "Macro" },
	["@text.environment.name"] = { link = "Type" },
	["@text.reference"] = { link = "TSParameterReference" },
	["@text.todo"] = { link = "Todo" },
	["@text.note"] = { link = "Tag" },
	["@text.warning"] = { link = "DiagnosticWarn" },
	["@text.danger"] = { link = "DiagnosticError" },
	["@tag"] = { link = "TSTag" },
	["@tag.attribute"] = { link = "TSAttribute" },
	["@tag.delimiter"] = { link = "TSTagDelimiter" },
	--
	["@function.method"] = { link = "@method" },
	["@function.method.call"] = { link = "@method.call" },
	["@comment.error"] = { link = "@text.danger" },
	["@comment.warning"] = { link = "@text.warning" },
	["@comment.hint"] = { link = "DiagnosticHint" },
	["@comment.info"] = { link = "DiagnosticInfo" },
	["@comment.todo"] = { link = "@text.todo" },
	["@diff.plus"] = { link = "@text.diff.add" },
	["@diff.minus"] = { link = "@text.diff.delete" },
	["@diff.delta"] = { link = "DiffChange" },
	["@string.special.url"] = { link = "@text.uri" },
	["@keyword.directive"] = { link = "@preproc" },
	["@keyword.directive.define"] = { link = "@define" },
	["@keyword.storage"] = { link = "@storageclass" },
	["@keyword.conditional"] = { link = "@conditional" },
	["@keyword.debug"] = { link = "@debug" },
	["@keyword.exception"] = { link = "@exception" },
	["@keyword.import"] = { link = "@include" },
	["@keyword.repeat"] = { link = "@repeat" },
	["@variable.parameter"] = { link = "@parameter" },
	["@variable.member"] = { link = "@field" },
	["@module"] = { link = "@namespace" },
	["@number.float"] = { link = "@float" },
	["@string.special.symbol"] = { link = "@symbol" },
	["@string.regexp"] = { link = "@string.regex" },
	["@markup.strong"] = { link = "@text.strong" },
	["@markup.italic"] = { link = "@text.italic" },
	["@markup.link"] = { link = "@text.link" },
	["@markup.strikethrough"] = { link = "@text.strikethrough" },
	["@markup.heading"] = { link = "@text.title" },
	["@markup.raw"] = { link = "@text.literal" },
	["@markup.link.url"] = { link = "@text.uri" },
	["@markup.link.label"] = { link = "@string.special" },
	["@markup.list"] = { link = "@punctuation.special" },

	-- Diff
	DiffAdd = { fg = c.oliveGreen, bg = c.offBlack },
	DiffChange = { fg = c.midDarkGrey, bg = c.offBlack },
	DiffDelete = { fg = c.midLightGrey, bg = c.offBlack },
	DiffText = { fg = c.blueGrey, bg = c.offBlack },
	DiffAdded = { fg = c.oliveGreen, bg = c.offBlack },
	DiffFile = { fg = c.midLightGrey, bg = c.offBlack },
	DiffNewFile = { fg = c.oliveGreen, bg = c.offBlack },
	DiffLine = { fg = c.blueGrey, bg = c.offBlack },
	DiffRemoved = { fg = c.midLightGrey, bg = c.offBlack },

	-- Git
	gitcommitOverflow = { fg = c.midLightGrey },
	gitcommitSummary = { fg = c.oliveGreen },
	gitcommitComment = { fg = c.midDarkGrey },
	gitcommitUntracked = { fg = c.midDarkGrey },
	gitcommitDiscarded = { fg = c.midDarkGrey },
	gitcommitSelected = { fg = c.midDarkGrey },
	gitcommitHeader = { fg = c.pink },
	gitcommitSelectedType = { fg = c.blueGrey },
	gitcommitUnmergedType = { fg = c.blueGrey },
	gitcommitDiscardedType = { fg = c.blueGrey },
	gitcommitBranch = { fg = c.orange, bold = true },
	gitcommitUntrackedFile = { fg = c.yellow },
	gitcommitUnmergedFile = { fg = c.midLightGrey, bold = true },
	gitcommitDiscardedFile = { fg = c.midLightGrey, bold = true },
	gitcommitSelectedFile = { fg = c.oliveGreen, bold = true },

	-- Spelling
	SpellBad = { undercurl = true, sp = c.midLightGrey },
	SpellLocal = { undercurl = true, sp = c.waterGreen },
	SpellCap = { undercurl = true, sp = c.blueGrey },
	SpellRare = { undercurl = true, sp = c.pink },

	-- Telescope
	TelescopeBorder = { fg = c.yellow },
	TelescopePromptBorder = { fg = c.yellow, bg = c.offBlack },
	TelescopePromptNormal = { fg = c.lightGrey, bg = c.offBlack },
	TelescopePromptPrefix = { fg = c.lightGrey, bg = c.offBlack },
	TelescopeNormal = { fg = c.midLightGrey },
	TelescopePreviewTitle = { fg = c.lightGrey, bg = c.offBlack },
	TelescopePromptTitle = { fg = c.lightGrey, bg = c.offBlack },
	TelescopeResultsTitle = { fg = c.lightGrey, bg = c.offBlack },
	TelescopeSelection = { bg = c.darkestGrey },
	TelescopePreviewLine = { bg = c.darkestGrey },

	-- Cmp
	CmpDocumentationBorder = { fg = c.lightGrey },
	CmpDocumentation = { fg = c.lightGrey },
	CmpItemAbbr = { fg = c.lightGrey },
	CmpItemAbbrDeprecated = { fg = c.midDarkGrey, strikethrough = true },
	CmpItemAbbrMatch = { fg = c.blueGrey },
	CmpItemAbbrMatchFuzzy = { fg = c.blueGrey },
	CmpItemKindDefault = { fg = c.lightGrey },
	CmpItemMenu = { fg = c.midLightGrey },
	CmpItemKindKeyword = { fg = c.pink },
	CmpItemKindVariable = { fg = c.midLightGrey },
	CmpItemKindConstant = { fg = c.orange },
	CmpItemKindReference = { fg = c.midLightGrey },
	CmpItemKindValue = { fg = c.orange },
	CmpItemKindFunction = { fg = c.blueGrey },
	CmpItemKindMethod = { fg = c.blueGrey },
	CmpItemKindConstructor = { fg = c.blueGrey },
	CmpItemKindClass = { fg = c.yellow },
	CmpItemKindInterface = { fg = c.yellow },
	CmpItemKindStruct = { fg = c.yellow },
	CmpItemKindEvent = { fg = c.yellow },
	CmpItemKindEnum = { fg = c.yellow },
	CmpItemKindUnit = { fg = c.yellow },
	CmpItemKindModule = { fg = c.lightGrey },
	CmpItemKindProperty = { fg = c.midLightGrey },
	CmpItemKindField = { fg = c.midLightGrey },
	CmpItemKindTypeParameter = { fg = c.yellow },
	CmpItemKindEnumMember = { fg = c.yellow },
	CmpItemKindOperator = { fg = c.lightGrey },
	CmpItemKindSnippet = { fg = c.midLightGrey },

	-- DAP
	DapUINormal = { link = "Normal" },
	DapUIVariable = { link = "Normal" },
	DapUIScope = { fg = c.blueGrey },
	DapUIType = { fg = c.pink },
	DapUIValue = { link = "Normal" },
	DapUIModifiedValue = { bold = true, fg = c.blueGrey },
	DapUIDecoration = { fg = c.blueGrey },
	DapUIThread = { fg = c.oliveGreen },
	DapUIStoppedThread = { fg = c.blueGrey },
	DapUIFrameName = { link = "Normal" },
	DapUISource = { fg = c.pink },
	DapUILineNumber = { fg = c.blueGrey },
	DapUIFloatNormal = { link = "NormalFloat" },
	DapUIFloatBorder = { fg = c.blueGrey },
	DapUIWatchesEmpty = { fg = c.midLightGrey },
	DapUIWatchesValue = { fg = c.oliveGreen },
	DapUIWatchesError = { fg = c.midLightGrey },
	DapUIBreakpointsPath = { fg = c.blueGrey },
	DapUIBreakpointsInfo = { fg = c.oliveGreen },
	DapUIBreakpointsCurrentLine = { bold = true, fg = c.oliveGreen },
	DapUIBreakpointsLine = { link = "DapUILineNumber" },
	DapUIBreakpointsDisabledLine = { fg = c.darkGrey },
	DapUICurrentFrameName = { link = "DapUIBreakpointsCurrentLine" },
	DapUIStepOver = { fg = c.blueGrey },
	DapUIStepInto = { fg = c.blueGrey },
	DapUIStepBack = { fg = c.blueGrey },
	DapUIStepOut = { fg = c.blueGrey },
	DapUIStop = { fg = c.midLightGrey },
	DapUIPlayPause = { fg = c.oliveGreen },
	DapUIRestart = { fg = c.oliveGreen },
	DapUIUnavailable = { fg = c.darkGrey },
	DapUIWinSelect = { bold = true, fg = c.blueGrey },
	DapUIEndofBuffer = { link = "EndOfBuffer" },
	DapUINormalNC = { link = "Normal" },
	DapUIPlayPauseNC = { fg = c.oliveGreen },
	DapUIRestartNC = { fg = c.oliveGreen },
	DapUIStopNC = { fg = c.midLightGrey },
	DapUIUnavailableNC = { fg = c.darkGrey },
	DapUIStepOverNC = { fg = c.blueGrey },
	DapUIStepIntoNC = { fg = c.blueGrey },
	DapUIStepBackNC = { fg = c.blueGrey },
	DapUIStepOutNC = { fg = c.blueGrey },

	-- Noice
	NoiceCmdlinePopupBorderSearch = { link = "FloatBorder" },
	NoiceCmdlineIconSearch = { link = "Title" },
	NoiceCmdlineIcon = { link = "Title" },

    -- Coverage
    CoverageCovered = { fg = c.oliveGreen },
    CoverageUncovered = { fg = c.red },
}

return {
	setup = function()
		vim.cmd("syntax reset")
		if vim.g.colors_name then
			vim.cmd("hi clear")
		end
		vim.o.termguicolors = true
		vim.o.background = "dark"
		vim.g.colors_name = "sg"
		for group, hi in pairs(highlights) do
			vim.api.nvim_set_hl(0, group, hi)
		end
	end,
}
